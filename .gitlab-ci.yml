variables: 
  WORKDIR: /var/deploy/${CI_COMMIT_BRANCH}/${CI_COMMIT_SHORT_SHA}
  DIR_TEST: /var/www/test-front-rent.myauto.ge
  DIR_STAGING: /var/www/staging-front-rent.myauto.ge
  DIR: /var/www/rent.myauto.ge
stages:
  - main
  - staging
  - test
#
build-main:
    stage: main
    only:
      - main
    tags:
      - front-rent      
    script:
        - pwd
        - rsync -tar --exclude='.git*' --exclude='readme.md'  --stats --no-perms . ${WORKDIR}
        - echo "${ENV}" > ${WORKDIR}/src/env.js
        - echo "${ECOSYSTEM}" > ${WORKDIR}/ecosystem.config.js
        - cd ${WORKDIR} && yarn
        - cd ${WORKDIR} && yarn build 
        - ln -sfT ${WORKDIR} ${DIR}
        - cd ${DIR} && (pm2 reload ecosystem.config.js || pm2 start ecosystem.config.js) && pm2 save
        - cd /var/deploy/${CI_COMMIT_BRANCH} && ls -t | tail -n +3 | sudo xargs -I {} rm -r {}

build-staging:
    stage: staging
    only:
      - staging
    tags:
      - test-front-rent
    script:
        - rsync -tar --exclude='.git*' --exclude='readme.md'  --stats --no-perms . ${WORKDIR}
        - echo "${ENV_STAGING}" > ${WORKDIR}/src/env.js
        - echo "${ECOSYSTEM_STAGING}" > ${WORKDIR}/ecosystem.config.js
        - cd ${WORKDIR} && yarn
        - cd ${WORKDIR} && yarn build
        - ln -sfT ${WORKDIR} ${DIR_STAGING}
        - cd ${DIR_STAGING} && (pm2 reload ecosystem.config.js || pm2 start ecosystem.config.js) && pm2 save
        - cd /var/deploy/${CI_COMMIT_BRANCH} && ls -t | tail -n +3 | sudo xargs -I {} rm -r {}

build-test:
    stage: test
    only:
      - test
    tags:
        - test-front-rent
    script:
        - rsync -tar --exclude='.git*' --exclude='readme.md'  --stats --no-perms . ${WORKDIR}
        - echo "${ENV_TEST}" > ${WORKDIR}/src/env.js
        - echo "${ECOSYSTEM_TEST}" > ${WORKDIR}/ecosystem.config.js
        - cd ${WORKDIR} && yarn
        - cd ${WORKDIR} && yarn build
        - cd ${WORKDIR} && yarn test:ci
        - cat ${WORKDIR}/coverage/cobertura-coverage.xml | grep "coverage lines-valid" > ${WORKDIR}/coverage.xml
        - COVERAGE_NUMBER=$(cat ${WORKDIR}/coverage.xml | grep -oP 'line-rate="\K\d+(\.\d+)?')
        - |
          if (( $(echo "${COVERAGE_NUMBER} <= 33" | bc -l) )); then
            echo "${COVERAGE_NUMBER}"
            COVERAGECOL="red"
            echo "IN -> ${COVERAGECOL}"
          elif (( $(echo "${COVERAGE_NUMBER} >= 34 && ${COVERAGE_NUMBER} <= 66" | bc -l) )); then
            echo "${COVERAGE_NUMBER}"
            COVERAGECOL="yellow"
            echo "IN -> ${COVERAGECOL}"
          else
            echo ${COVERAGE_NUMBER}
            COVERAGECOL="brightgreen"
            echo "IN -> ${COVERAGECOL}"
          fi
          echo ${COVERAGECOL}
        - curl -o ${WORKDIR}/public/coverage.svg https://img.shields.io/badge/coverage-${COVERAGE_NUMBER}%25-${COVERAGECOL}.svg
        - ln -sfT ${WORKDIR} ${DIR_TEST}
        - cd ${DIR_TEST} && (pm2 reload ecosystem.config.js || pm2 start ecosystem.config.js) && pm2 save
        - cd /var/deploy/${CI_COMMIT_BRANCH} && ls -t | tail -n +3 | sudo xargs -I {} rm -r {}